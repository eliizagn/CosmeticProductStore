// <auto-generated />
using CosmeticProductStore.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CosmeticProductStore.DAL.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20231212133156_UpdatedStockItemsTable")]
    partial class UpdatedStockItemsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CosmeticProductStore.DAL.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("CosmeticProductStore.DAL.Data.Models.StockItem", b =>
                {
                    b.Property<int>("StoreCode")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasMaxLength(20)
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<int>("Quantity")
                        .HasMaxLength(20)
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.HasKey("StoreCode", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("stock_items", (string)null);
                });

            modelBuilder.Entity("CosmeticProductStore.DAL.Data.Models.Store", b =>
                {
                    b.Property<int>("StoreCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("store_code");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StoreCode"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("store_address");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("store_name");

                    b.HasKey("StoreCode");

                    b.ToTable("stores", (string)null);
                });

            modelBuilder.Entity("CosmeticProductStore.DAL.Data.Models.StockItem", b =>
                {
                    b.HasOne("CosmeticProductStore.DAL.Data.Models.Product", "Product")
                        .WithMany("StockItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CosmeticProductStore.DAL.Data.Models.Store", "Store")
                        .WithMany("StockItems")
                        .HasForeignKey("StoreCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("CosmeticProductStore.DAL.Data.Models.Product", b =>
                {
                    b.Navigation("StockItems");
                });

            modelBuilder.Entity("CosmeticProductStore.DAL.Data.Models.Store", b =>
                {
                    b.Navigation("StockItems");
                });
#pragma warning restore 612, 618
        }
    }
}
